openapi: 3.0.0
info:
  title: Movie Quotes API
  description: API documentation of Movie Quotes API
  version: 0.1.9

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

servers:
  - url: http://localhost:4444
    description: local server
  - url: http://producation.app
    description: production server

paths:
  # Authentication

  /activate-account:
    get:
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: Check your email after registration and enter JWT token which you got
      tags:
        - Authentication
      description: Activate user account after registration with JWT token
      responses:
        '200':
          description: Account activated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Account activated successfully!
        '403':
          description: Provided JWT token is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Account activation failed. JWT token is invalid!
        '404':
          description: User account not found. User is not registered yet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not registered yet!

  /verify-email:
    get:
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Enter your email address
      tags:
        - Authentication
      description: Verify email address and get email with JWT token
      responses:
        '200':
          description: Email verified successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Email verification link sent. Check your email.
        '404':
          description: User account with this email address not found. User is not registered yet.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User with this email is not registered yet.
        '422':
          description: Unprocessed Entity

  /activate-new-user-email:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: Enter JWT token you get via email
        - in: query
          name: userId
          required: true
          schema:
            type: string
          description: Enter user id
      tags:
        - Authentication
      description: Activate new user email
      responses:
        '200':
          description: New email activated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User email changed successfully
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /register-user:
    post:
      tags:
        - Authentication
      description: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: number
            example:
              name: 'john'
              email: 'john@gmail.com'
              password: 'password'
      responses:
        '201':
          description: User registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User registered successfully! Account verification link sent.
        '401':
          description: Email Couldn't be sent because mailing service api key is missing or is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Sendgrid api key is missing!
        '409':
          description: User already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is already registered!
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /google-auth:
    post:
      tags:
        - Authentication
      description: Authenticate with google account and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            example:
              name: 'john'
              email: 'john@gmail.com'
      responses:
        '200':
          description: JWT token sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                example:
                  token: JWT token
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /authorization:
    post:
      tags:
        - Authentication
      description: Log in ang get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: 'john@gmail.com'
              password: 'password'
      responses:
        '200':
          description: User logged in successfully. JWT token sent.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                example:
                  token: JWT token
        '401':
          description: User is not authorized to change password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized to change password
        '403':
          description: Account is not verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User can not log in because account is not verified yet
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  # Users
  /user-details:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: accessToken
          required: true
          schema:
            type: string
          description: Enter access token which you got after authorization
      tags:
        - User
      description: Fetch user details
      responses:
        '200':
          description: User details fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                example:
                  _id: 62e9ec0df44f549d9b153423
                  name: elon musk
                  email: spacex@gmail.com
        '401':
          description: Provided JWT token is invalid.
        '404':
          description: User account not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '500':
          description: Internal Server Error.

  /secondary-email-verification:
    get:
      parameters:
        - in: query
          name: secondaryEmail
          required: true
          schema:
            type: string
          description: Enter secondary email address
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Enter user id
      tags:
        - User
      description: Send secondary email verification email with verification link
      responses:
        '200':
          description: Email verification link sent. Check your email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Email verification link sent. Check your email.
        '404':
          description: User or email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User or email not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /secondary-email:
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      description: Add secondary email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                id:
                  type: string
            example:
              email: example@gmail.com
              id: 62cd66b2bc4b70708a73125f
      responses:
        '200':
          description: Secondary email added successfully
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '409':
          description: Provided email address is already added / Google account user can't add secondary email
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /upload-user-image:
    patch:
      security:
        - bearerAuth: []
      tags:
        - User
      description: Upload user profile image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                image:
                  type: string
                  format: binary
            example:
              id: 62cd66b2bc4b70708a73125f
      responses:
        '201':
          description: User  image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User image uploaded successfully
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '422':
          description: Unprocessed Entity

  /change-password:
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      description: Change user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                id:
                  type: string
            example:
              password: newpassword
              id: 62cd66b2bc4b70708a73125f
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: JWT token
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '409':
          description: You can't change password of google user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is registered with google account. You can't change password of google user.
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /change-username:
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      description: Change username
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                id:
                  type: string
            example:
              username: username
              id: '62e934bdfc8d986260667984'
      responses:
        '200':
          description: Username changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Username changed successfully
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /change-primary-email:
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      description: Change primary email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                id:
                  type: string
            example:
              email: example@gmail.com
              id: '62e934bdfc8d986260667984'
      responses:
        '200':
          description: Get JWT token after change primary email
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User or email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '409':
          description: Provided email is already primary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Provided email is already primary
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /verify-secondary-email:
    put:
      parameters:
        - in: query
          name: secondaryEmailVerificationToken
          required: true
          schema:
            type: string
          description: Enter jwt token which you got from email verification email
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Enter user id
      tags:
        - User
      description: Verify secondary email
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Email verified successfully
        '404':
          description: User or email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User or email not found
        '422':
          description: Unprocessed Entity

  /delete-secondary-email:
    delete:
      security:
        - bearerAuth: []
      tags:
        - User
      description: Delete secondary email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                id:
                  type: string
            example:
              email: example@gmail.com
              id: 62cd66b2bc4b70708a73125f
      responses:
        '200':
          description: Secondary email Deleted successfully
        '401':
          description: User is not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User is not authorized
        '404':
          description: User or email not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  # Movie
  /movie-genres:
    get:
      tags:
        - Movie
      description: Fetch movie genres
      responses:
        '200':
          description: Movie genres fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                [
                  'Adventure',
                  'Musicals',
                  'Romance',
                  'Fantasy',
                  'Romance',
                  'Mystery',
                  'Action',
                  'Comedy',
                  'Horror',
                  'Sports',
                  'Drama',
                ]

  /all-movies:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
          description: Enter mongodb id of certain user
      tags:
        - Movie
      description: Fetch all movies added by user
      responses:
        '200':
          description: Movies fetched successfully
        '401':
          description: User is not authorized
        '403':
          description: Authorization header does not include valid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Token is not valid
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Provided userId is invalid

  /add-movie:
    post:
      security:
        - bearerAuth: []
      tags:
        - Movie
      description: Add new movie
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movieNameEn:
                  type: string
                  example: Movie name
                movieNameGe:
                  type: string
                  example: ფილმის სახელი
                movieDescriptionEn:
                  type: string
                  example: Movie description
                movieDescriptionGe:
                  type: string
                  example: ფილმის აღწერა
                directorEn:
                  type: string
                  example: Director
                directorGe:
                  type: string
                  example: რეჟისორი
                budget:
                  type: number
                  example: 3200000
                userId:
                  type: string
                  example: 62e934bdfc8d986260667984
                movieGenres[]:
                  type: array
                  items:
                    type: string
                  example:
                    - Adventure
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Movie added successfully
        '409':
          description: Movie is already added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Movie is already added
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal server error

  /change-movie:
    put:
      security:
        - bearerAuth: []
      tags:
        - Movie
      description: Change movie
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movieNameEn:
                  type: string
                  example: Movie name
                movieNameGe:
                  type: string
                  example: ფილმის სახელი
                movieDescriptionEn:
                  type: string
                  example: Movie description
                movieDescriptionGe:
                  type: string
                  example: ფილმის აღწერა
                directorEn:
                  type: string
                  example: Director
                directorGe:
                  type: string
                  example: რეჟისორი
                budget:
                  type: number
                  example: 3200000
                id:
                  type: string
                  example: 62e934bdfc8d986260667984
                movieGenres[]:
                  type: array
                  items:
                    type: string
                  example:
                    - Adventure
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Movie added successfully
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Movie not found
        '409':
          description: Movie is already added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Movie with this name is already added
        '422':
          description: Unprocessed Entity

  /delete-movie:
    delete:
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Movie
      description: Delete movie
      responses:
        '200':
          description: Movie deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Movie deleted successfully
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Movie not found
        '422':
          description: Unprocessed Entity

  # Quotes
  /all-quotes:
    get:
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Get news feed posts (3 on for each request) added by users.
      responses:
        '200':
          description: Posts fetched successfully
        '500':
          description: Internal server error

  /movie-quotes:
    get:
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Get quote list of certain movie
      responses:
        '200':
          description: Quote list fetched successfully
        '404':
          description: Movie and quotes not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Movie and quotes not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal server error

  /news-feed-post:
    get:
      parameters:
        - in: query
          name: searchValue
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Search news feed posts with quote or movie name
      responses:
        '200':
          description: News feed posts fetched successfully
        '422':
          description: Unprocessed Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Search value should starts with '@' or '#'
        '500':
          description: Internal server error

  /add-quote:
    post:
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Add new quote
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie:
                  type: string
                  example: 62fb430e66f91160114e57cd
                quoteEn:
                  type: string
                  example: quote in English
                quoteGe:
                  type: string
                  example: quote in Georgian
                user:
                  type: string
                  example: 62e934bdfc8d986260667984
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Quote added successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '409':
          description: Quote is already added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Quote is already added
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal server error

  /add-comment:
    post:
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Comment on quote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commentText:
                  type: string
                quoteId:
                  type: string
                userId:
                  type: number
            example:
              commentText: comment text
              quoteId: 62f129f76039ca61e0b44654
              userId: '62f129f76039ca61e0b44654'
      responses:
        '201':
          description: Comment added successfully
        '401':
          description: User or quote not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /change-quote:
    put:
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Change quote details
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 62fb8014c91b7eb0dd6d7ced
                quoteEn:
                  type: string
                  example: quote in English
                quoteGe:
                  type: string
                  example: ციტატა ქართულად
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Quote details changed successfully
        '404':
          description: Quote not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Quote not found
        '409':
          description: Quote is already added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: This quote is already added
        '422':
          description: Unprocessed Entity

  /like-quote:
    put:
      parameters:
        - in: query
          name: quoteId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Like quote
      responses:
        '200':
          description: Quote liked successfully
        '404':
          description: User or quote not found
        '409':
          description: User already liked quote
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User already liked this quote
        '422':
          description: Provided user or quote id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Enter valid id

  /dislike-quote:
    put:
      parameters:
        - in: query
          name: quoteId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Dislike quote
      responses:
        '200':
          description: Quote disliked successfully
        '404':
          description: User or quote not found
        '409':
          description: User have not liked quote yet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User have not liked this quote yet
        '422':
          description: Provided user or quote id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Enter valid id

  /delete-quote:
    delete:
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      tags:
        - Quote
      description: Delete quote
      responses:
        '200':
          description: Quote deleted successfully
        '404':
          description: Quote not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Quote not found
        '422':
          description: Provided id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Enter valid id

  # Notification
  /user-notifications:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Enter user id
        - in: query
          name: page
          required: true
          schema:
            type: number
            minimum: 1
          description: Enter page number depending which part of notifications you want to fetch
      tags:
        - Notification
      description: Fetch notifications of certain user
      responses:
        '200':
          description: Notifications fetched successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /add-notification:
    post:
      security:
        - bearerAuth: []
      tags:
        - Notification
      description: Add new notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receiverId:
                  type: string
                senderId:
                  type: string
                notificationType:
                  type: string
            example:
              receiverId: 62f129f76039ca61e0b44654
              senderId: 62f129f76039ca61e0b44654
              notificationType: 'like'
      responses:
        '201':
          description: Notification added successfully
        '404':
          description: Sender or receiver not found
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.

  /mark-as-read:
    put:
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Enter user id
      tags:
        - Notification
      description: Mark user notifications as read
      responses:
        '200':
          description: Notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Notifications marked as read
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User not found
        '409':
          description: User notification list is empty
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: User notification list is empty
        '422':
          description: Unprocessed Entity
        '500':
          description: Internal Server Error.
